{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BaseTemplateURL": {
      "Type": "String",
      "Description": "S3 Base URL of all the CloudFormation templated used in Dromedary (without the file names)",
      "Default": "https://s3.amazonaws.com/demo-cfn-public/"
    },
    "ElasticBeanStalkBucket": {
      "Type": "String",
      "Description": "S3 Bucket to store Beanstalk Application Versions",
      "Default": "demo-cfn-public"
    },
    "TeamcityCFNTemplateFile": {
      "Type": "String",
      "Description": "Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default": "teamcity-instance.template"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.medium"
      ],
      "Description": "Enter the Instance Size"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used access the web server using SSH.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "SubnetConfig": {
      "VPC": {
        "CIDR": "10.0.0.0/16"
      },
      "Public": {
        "CIDR": "10.0.0.0/24"
      },
      "Private": {
        "CIDR": "10.0.1.0/24"
      }
    }
  },
  "Metadata": {
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetConfig",
            "VPC",
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicSubnet": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetConfig",
            "Public",
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "VPCGatewayAttachment": {
      "DependsOn": [
        "VPC",
        "InternetGateway"
      ],
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "DependsOn": [
        "VPC"
      ],
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicRoute": {
      "DependsOn": [
        "PublicRouteTable",
        "InternetGateway"
      ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation": {
      "DependsOn": [
        "PublicSubnet",
        "PublicRouteTable"
      ],
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "DemoApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": {
          "Ref": "AWS::StackName"
        },
        "Description": "SpringBoot Demo Application"
      },
      "Metadata": {
      }
    },
    "ConfigurationTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": {
          "Ref": "DemoApplication"
        },
        "SolutionStackName": "64bit Amazon Linux 2015.09 v2.0.8 running Java 8",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": {
              "Ref": "InstanceType"
            }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "VPCId",
            "Value": {
              "Ref": "VPC"
            }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "Subnets",
            "Value": {
              "Ref": "PublicSubnet"
            }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "AssociatePublicIpAddress",
            "Value": "true"
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "ELBSubnets",
            "Value": {
              "Ref": "PublicSubnet"
            }
          }
        ]
      },
      "Metadata": {
      }
    },
    "Environment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "EnvironmentName": {
          "Ref": "AWS::StackName"
        },
        "ApplicationName": {
          "Ref": "DemoApplication"
        },
        "TemplateName": {
          "Ref": "ConfigurationTemplate"
        }
      },
      "Metadata": {
      }
    },
    "TeamCityStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": [
        "Environment"
      ],
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "BaseTemplateURL"
              },
              {
                "Ref": "TeamcityCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "ElasticBeanStalkBucket": {
            "Ref": "ElasticBeanStalkBucket"
          },
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "SSHLocation": {
            "Ref": "SSHLocation"
          }
        }
      }
    }
  }
}