buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.24"

	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jp.classmethod.aws.beanstalk'
apply plugin: 'jp.classmethod.aws'

jar {
	baseName = 'demo'
	version = '0.0.3-SNAPSHOT'
}
version = '0.4-SNAPSHOT'
ext.artifactId = '05-beanstalk'

repositories {
	mavenCentral()
}

aws {
	profileName = "default"
	region = "us-east-1"

}
beanstalk {

	appName 'DemoApplication'
	appDesc 'foobar demo application'

	version {
		label = "demo-build-"+ project.teamcity["build.number"]
		description = "v${project.version}"
		bucket = "elasticbeanstalk-${aws.region}-${aws.accountId}"
		key = "eb-apps/demo-${artifactId}.jar"
	}

	environment {
		tier = 'WebServer'
		envName = 'demo-env'
		envDesc = 'foobar demo application development environemnt'
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task uploadJar(type: jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask, dependsOn: bootRepackage) {
	group "AWS"
	description "Upload ${artifactId} application bundle file to S3."

	bucketName "elasticbeanstalk-${aws.region}-${aws.accountId}"
	key "eb-apps/demo-${artifactId}.jar"
	file jar.archivePath
}
awsEbCreateApplicationVersion.dependsOn uploadJar